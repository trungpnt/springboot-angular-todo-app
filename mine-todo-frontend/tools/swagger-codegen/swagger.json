{
  "swagger" : "2.0",
  "info" : {
    "description" : "Swagger Api documentation for Todo application",
    "version" : "0.0.1-SNAPSHOT",
    "title" : "Swagger Api Documentation for Todo application",
    "contact" : {
      "name" : "Ali Bouali",
      "url" : "https://www.udemy.com/user/bouali-ali/",
      "email" : "bouali.social@gmail.com"
    }
  },
  "basePath" : "http://localhost:8081",
  "tags" : [ {
    "name" : "apicategories"
  }, {
    "name" : "apitodos"
  }, {
    "name" : "apiusers"
  }, {
    "name" : "authApi"
  } ],
  "paths" : {
    "/api/api/categories/delete/{id}" : {
      "delete" : {
        "tags" : [ "apicategories" ],
        "summary" : "Delete category",
        "description" : "Deletes a category by ID",
        "operationId" : "deleteCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "The category id",
          "required" : true,
          "type" : "integer",
          "pattern" : ".+",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "The category deleted"
          },
          "404" : {
            "description" : "Category not found"
          }
        }
      }
    },
    "/api/auth/login" : {
      "post" : {
        "tags" : [ "authApi" ],
        "summary" : "Login user",
        "description" : "Creates a new user ",
        "operationId" : "loginUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "User DTO",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserDto"
            }
          },
          "201" : {
            "description" : "The connected user."
          }
        }
      }
    },
    "/api/categories/all" : {
      "get" : {
        "summary" : "Category Details",
        "description" : "Returns the list of the categories",
        "operationId" : "getAllCategories",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "List of the categories",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CategoryDto"
              }
            }
          }
        }
      }
    },
    "/api/categories/create" : {
      "post" : {
        "summary" : "Create category",
        "description" : "Creates a new category ",
        "operationId" : "createCategory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CategoryDto"
            }
          },
          "201" : {
            "description" : "The newly created Category."
          }
        }
      }
    },
    "/api/categories/todos/today/{userId}" : {
      "get" : {
        "tags" : [ "apicategories" ],
        "summary" : "List of all categories and Todo for today",
        "description" : "Returns the list of the Todo of a selected category",
        "operationId" : "getAllTodoByCategoriesForToday",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "query",
          "description" : "User ID",
          "required" : true,
          "type" : "integer",
          "pattern" : ".+",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of the Todos",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TodoDto"
              }
            }
          }
        }
      }
    },
    "/api/categories/todos/{id}" : {
      "get" : {
        "tags" : [ "apicategories" ],
        "summary" : "Todo Details by category ID",
        "description" : "Returns the list of the Todo of a selected category",
        "operationId" : "getAllTodoByCategoriesId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Category ID",
          "required" : true,
          "type" : "integer",
          "pattern" : ".+",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of the Todos",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TodoDto"
              }
            }
          }
        }
      }
    },
    "/api/categories/update" : {
      "patch" : {
        "tags" : [ "apicategories" ],
        "summary" : "Update Category",
        "description" : "Updates an existing Category ",
        "operationId" : "updateCategory",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Category DTO",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CategoryDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CategoryDto"
            }
          },
          "201" : {
            "description" : "The newly created user."
          }
        }
      }
    },
    "/api/categories/users/{id}" : {
      "get" : {
        "tags" : [ "apicategories" ],
        "summary" : "Category Details by user ID",
        "description" : "Returns the list of the categories of a selected user",
        "operationId" : "getAllCategoriesByUserId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "User ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of the categories",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CategoryDto"
              }
            }
          }
        }
      }
    },
    "/api/categories/{id}" : {
      "get" : {
        "tags" : [ "apicategories" ],
        "summary" : "Category Details",
        "description" : "Returns the list of the users",
        "operationId" : "getCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "The category id",
          "required" : true,
          "type" : "integer",
          "pattern" : ".+",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "The Category",
            "schema" : {
              "$ref" : "#/definitions/CategoryDto"
            }
          },
          "404" : {
            "description" : "Category not found"
          }
        }
      }
    },
    "/api/todos/all" : {
      "get" : {
        "summary" : "Todo Details",
        "description" : "Returns the list of the Todos",
        "operationId" : "getAllTodos",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "List of the Todos",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TodoDto"
              }
            }
          }
        }
      }
    },
    "/api/todos/create" : {
      "post" : {
        "tags" : [ "apitodos" ],
        "summary" : "Create To do",
        "description" : "Creates a new to do ",
        "operationId" : "createTodo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Todo DTO",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TodoDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TodoDto"
            }
          },
          "201" : {
            "description" : "The newly created To do."
          }
        }
      }
    },
    "/api/todos/delete/{id}" : {
      "delete" : {
        "tags" : [ "apitodos" ],
        "summary" : "Delete Todo",
        "description" : "Deletes a Todo by ID",
        "operationId" : "deleteTodo",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "The Todo id",
          "required" : true,
          "type" : "integer",
          "pattern" : ".+",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "The Todo deleted",
            "schema" : {
              "$ref" : "#/definitions/TodoDto"
            }
          },
          "404" : {
            "description" : "Todo not found"
          }
        }
      }
    },
    "/api/todos/update" : {
      "patch" : {
        "summary" : "Update Todo",
        "description" : "Updates an existing Todo ",
        "operationId" : "updateTodo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TodoDto"
            }
          },
          "201" : {
            "description" : "The newly created Todo."
          }
        }
      }
    },
    "/api/todos/{todoId}" : {
      "get" : {
        "tags" : [ "apitodos" ],
        "summary" : "Todo Details",
        "description" : "Returns the Todo",
        "operationId" : "getTodo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "todoId",
          "in" : "query",
          "description" : "The Todo id",
          "required" : true,
          "type" : "integer",
          "pattern" : ".+",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "The Todo",
            "schema" : {
              "$ref" : "#/definitions/TodoDto"
            }
          },
          "404" : {
            "description" : "Todo not found"
          }
        }
      }
    },
    "/api/users/all" : {
      "get" : {
        "tags" : [ "apiusers" ],
        "summary" : "User Details",
        "description" : "Returns the list of the users",
        "operationId" : "getAllUsers",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "List of the users",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserDto"
              }
            }
          }
        }
      }
    },
    "/api/users/create" : {
      "post" : {
        "tags" : [ "apiusers" ],
        "summary" : "Create user",
        "description" : "Creates a new user ",
        "operationId" : "createUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "User DTO",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserDto"
            }
          },
          "201" : {
            "description" : "The newly created user."
          }
        }
      }
    },
    "/api/users/delete/{id}" : {
      "delete" : {
        "tags" : [ "apiusers" ],
        "summary" : "Delete a user",
        "description" : "Deletes a user by ID",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "The use id",
          "required" : true,
          "type" : "integer",
          "pattern" : ".+",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "The user",
            "schema" : {
              "$ref" : "#/definitions/UserDto"
            }
          },
          "404" : {
            "description" : "User not found"
          }
        }
      }
    },
    "/api/users/{id}" : {
      "get" : {
        "tags" : [ "apiusers" ],
        "summary" : "User Details",
        "description" : "Returns the list of the users",
        "operationId" : "getUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "The use id",
          "required" : true,
          "type" : "integer",
          "pattern" : ".+",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "The user",
            "schema" : {
              "$ref" : "#/definitions/UserDto"
            }
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "patch" : {
        "tags" : [ "apiusers" ],
        "summary" : "Update user",
        "description" : "Updates an existing user ",
        "operationId" : "updateUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "User ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "User DTO",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserDto"
            }
          },
          "201" : {
            "description" : "The newly created user."
          }
        }
      }
    }
  },
  "definitions" : {
    "CategoryDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "user" : {
          "$ref" : "#/definitions/UserDto"
        },
        "todoList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TodoDto"
          }
        }
      }
    },
    "TodoDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "done" : {
          "type" : "boolean"
        },
        "favorite" : {
          "type" : "boolean"
        },
        "category" : {
          "$ref" : "#/definitions/CategoryDto"
        }
      }
    },
    "UserDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    }
  }
}